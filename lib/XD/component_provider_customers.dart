// ignore_for_file: prefer_const_constructors

import 'package:adobe_xd/blend_mask.dart';
import 'package:adobe_xd/pinned.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:get/get.dart';

class ComponentProviderCustomers extends StatefulWidget {
  String customerName;
  String workTime;
  String price;
  DateTime dateTime;
  ComponentProviderCustomers(
      {Key? key, required this.customerName, required this.price, required this.workTime, required this.dateTime})
      : super(key: key);

  @override
  State<ComponentProviderCustomers> createState() => _ComponentProviderCustomersState();
}

class _ComponentProviderCustomersState extends State<ComponentProviderCustomers> {
  @override
  Widget build(BuildContext context) {
    return Stack(
      children: <Widget>[
        Pinned.fromPins(
          Pin(start: 0.0, end: 0.0),
          Pin(start: 0.0, end: 0.0),
          child: Container(
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(20.0),
              border: Border.all(width: 1.5, color: Color.fromARGB(255, 76, 9, 67)),
            ),
          ),
        ),
        Pinned.fromPins(
          Pin(size: 40.0, middle: 0.13),
          Pin(size: 20.0, middle: 0.85),
          // ignore: prefer_const_constructors
          child: Text(
            widget.price + ' \$',
            style: TextStyle(
              fontFamily: 'Poppins',
              fontSize: 15,
              fontWeight: FontWeight.bold,
              color: const Color(0xff115173),
            ),
            textAlign: TextAlign.left,
          ),
        ),
        Pinned.fromPins(
          Pin(size: 130.0, middle: 0.10),
          Pin(size: 30.0, middle: 0.2),
          child: Text(
            widget.customerName,
            style: TextStyle(
              fontFamily: 'Poppins',
              fontSize: 17,
              color: const Color(0xff022c43),
            ),
            textAlign: TextAlign.left,
          ),
        ),
        GestureDetector(
          onTap: () {
            Get.snackbar('call', 'the person');
          },
          child: Pinned.fromPins(
            Pin(size: 25.0, middle: 0.82),
            Pin(size: 25.0, middle: 0.559),
            child: SvgPicture.string(
              _svg_x04z0,
              allowDrawingOutsideViewBox: true,
              fit: BoxFit.fill,
            ),
          ),
        ),
        Transform.translate(
          offset: Offset(300, 19.0),
          child: GestureDetector(
            onTap: () {
              Get.snackbar('message', 'to person');
            },
            child: SizedBox(
              width: 25.0,
              height: 25.0,
              child:
                  // Adobe XD layer: 'ic-contact-chat' (group)
                  Stack(
                children: <Widget>[
                  SizedBox(
                    width: 25.0,
                    height: 25.0,
                    child: SvgPicture.string(
                      _svg_gd5z40,
                      allowDrawingOutsideViewBox: true,
                    ),
                  ),
                ],
              ),
            ),
          ),
        ),
        Pinned.fromPins(
          Pin(size: 110.0, middle: 0.55),
          Pin(start: 5.0, end: 6.0),
          child: Container(
            decoration: BoxDecoration(
              borderRadius: BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
              color: Color.fromARGB(204, 149, 210, 91),
              border: Border.all(width: 1.0, color: const Color(0xff707070)),
            ),
          ),
        ),
        Pinned.fromPins(
          Pin(size: 45.0, middle: 0.55),
          Pin(size: 20.0, middle: 0.25),
          child: Text(
            widget.workTime,
            style: TextStyle(
              fontFamily: 'Arial',
              fontSize: 15,
              color: Color.fromARGB(255, 124, 4, 4),
              fontWeight: FontWeight.w700,
            ),
            textAlign: TextAlign.center,
          ),
        ),
        Pinned.fromPins(
          Pin(size: 145.0, middle: 0.55),
          Pin(size: 20.0, middle: 0.7),
          child: Text(
            "${widget.dateTime.day}-${widget.dateTime.month}-${widget.dateTime.year}",
            style: TextStyle(
              fontFamily: 'Arial',
              fontSize: 17,
              color: Color.fromARGB(255, 20, 18, 154),
              fontWeight: FontWeight.w700,
            ),
            textAlign: TextAlign.center,
          ),
        ),
        Pinned.fromPins(
          Pin(size: 55.0, start: 0.0),
          Pin(start: 0.0, end: 1.0),
          child: BlendMask(
            blendMode: BlendMode.darken,
            child: Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: const AssetImage(''),
                  fit: BoxFit.fill,
                ),
              ),
            ),
          ),
        ),
      ],
    );
  }
}

const String _svg_gd5z40 =
    '<svg viewBox="0.0 0.0 20.0 20.0" ><path transform="translate(-2.0, -3.0)" d="M 4 3 L 14.00000190734863 3 C 15.10457324981689 3 16.00000190734863 3.994923114776611 16.00000190734863 5.222222328186035 L 16.00000190734863 11.88888931274414 C 16.00000190734863 13.11618900299072 15.10457324981689 14.11111068725586 14.00000190734863 14.11111068725586 L 11.00000190734863 14.11111068725586 L 8 17.44444274902344 L 5 14.11111068725586 L 4 14.11111068725586 C 2.89543080329895 14.11111068725586 2 13.11618900299072 2 11.88888931274414 L 2 5.222222328186035 C 2 3.994923114776611 2.895431041717529 2.999999761581421 4.000000476837158 3 Z" fill="none" stroke="#ff7f00" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" /><path transform="translate(-2.0, -2.44)" d="M 16 8 L 20 8 C 21.10457229614258 8 22 8.99492359161377 22 10.22222232818604 L 22 16.88888931274414 C 22 18.11618995666504 21.10457038879395 19.11111068725586 20 19.11111068725586 L 18.00000190734863 19.11111068725586 L 16 22.44444465637207 L 13.00000095367432 19.11111068725586 L 10.00000095367432 19.11111068725586 C 8.895431518554688 19.11111068725586 8 18.11618804931641 8 16.88888931274414 L 8 16.88888931274414" fill="none" stroke="#ff7f00" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" /></svg>';
const String _svg_x04z0 =
    '<svg viewBox="251.8 20.1 20.0 20.0" ><path transform="translate(250.88, 20.12)" d="M 4.964503288269043 13.29463958740234 C 6.944628238677979 15.65269947052002 9.328267097473145 17.50931167602539 12.04886150360107 18.82302474975586 C 13.08468341827393 19.31204414367676 14.46994018554688 19.89223098754883 16.01327323913574 19.99169731140137 C 16.10895156860352 19.9958381652832 16.20046997070312 19.99998474121094 16.2961483001709 19.99998474121094 C 17.33197021484375 19.99998474121094 18.1639575958252 19.64358329772949 18.84202575683594 18.91005897521973 C 18.8461856842041 18.90591239929199 18.8545036315918 18.89762306213379 18.85866546630859 18.88933563232422 C 19.09993934631348 18.59924125671387 19.37449836730957 18.33815383911133 19.66153335571289 18.06049156188965 C 19.85704803466797 17.87400245666504 20.05672264099121 17.67922210693359 20.24808120727539 17.48030281066895 C 21.1341438293457 16.5602855682373 21.1341438293457 15.39161396026611 20.23976135253906 14.50060844421387 L 17.73964309692383 12.009934425354 C 17.31532859802246 11.57064628601074 16.80781555175781 11.3385705947876 16.27534484863281 11.3385705947876 C 15.74287700653076 11.3385705947876 15.2312068939209 11.57064628601074 14.79441261291504 12.00578880310059 L 13.30516052246094 13.48941707611084 C 13.16788291931152 13.41067886352539 13.02644348144531 13.34022808074951 12.89332675933838 13.27391910552979 C 12.72692775726318 13.19103240966797 12.57301235198975 13.1122932434082 12.43573570251465 13.02526473999023 C 11.07959747314453 12.16741275787354 9.848258018493652 11.04847049713135 8.670999526977539 9.610427856445312 C 8.076128959655762 8.860324859619141 7.676775455474854 8.230402946472168 7.398061275482178 7.58804988861084 C 7.789093017578125 7.235791683197021 8.155168533325195 6.866954326629639 8.508761405944824 6.506410121917725 C 8.633560180664062 6.377936840057373 8.762516975402832 6.249466896057129 8.891474723815918 6.12099552154541 C 9.340747833251953 5.67341947555542 9.582022666931152 5.155392646789551 9.582022666931152 4.629077434539795 C 9.582022666931152 4.102761745452881 9.344907760620117 3.584733724594116 8.891474723815918 3.137157917022705 L 7.651816844940186 1.902181148529053 C 7.506218433380127 1.757133960723877 7.368940353393555 1.616230368614197 7.227504253387451 1.471182465553284 C 6.952946186065674 1.189375638961792 6.665912628173828 0.899280309677124 6.383036613464355 0.6381945013999939 C 5.954564571380615 0.219628244638443 5.451213359832764 -1.527097629150376e-05 4.91874361038208 -1.527097629150376e-05 C 4.390431880950928 -1.527097629150376e-05 3.88292121887207 0.219628319144249 3.437808990478516 0.6423388719558716 L 1.881994962692261 2.1922767162323 C 1.316244602203369 2.755890130996704 0.9959299564361572 3.439686059951782 0.9293712973594666 4.231232643127441 C 0.8503326177597046 5.221701145172119 1.033369541168213 6.274332046508789 1.507601261138916 7.546607494354248 C 2.235589742660522 9.51511287689209 3.333811044692993 11.34271335601807 4.964503288269043 13.29463958740234 Z M 1.944394588470459 4.318262100219727 C 1.994314193725586 3.767080068588257 2.206470012664795 3.307071447372437 2.605823755264282 2.909227132797241 L 4.153317928314209 1.367577314376831 C 4.394592761993408 1.135501146316528 4.660828590393066 1.015318870544434 4.918744564056396 1.015318870544434 C 5.172500133514404 1.015318870544434 5.430415153503418 1.135501146316528 5.667530536651611 1.375865936279297 C 5.946245193481445 1.632807850837708 6.208321571350098 1.90218198299408 6.491195678710938 2.188133001327515 C 6.632633209228516 2.33318042755127 6.778231620788574 2.478228092193604 6.923828125 2.62742018699646 L 8.163488388061523 3.86239767074585 C 8.421402931213379 4.119338512420654 8.554520606994629 4.380424976348877 8.554520606994629 4.63736629486084 C 8.554520606994629 4.894307613372803 8.421402931213379 5.155393123626709 8.163488388061523 5.412335395812988 C 8.034529685974121 5.540806293487549 7.905572414398193 5.67341947555542 7.776613235473633 5.80189037322998 C 7.38974142074585 6.191447257995605 7.027825832366943 6.560282230377197 6.62847375869751 6.912542343139648 C 6.620152950286865 6.920830249786377 6.615993499755859 6.924974918365479 6.607674121856689 6.933262825012207 C 6.262398719787598 7.27723217010498 6.316478729248047 7.604626655578613 6.399677276611328 7.853280067443848 C 6.40383768081665 7.865711212158203 6.407997131347656 7.874001502990723 6.412157535552979 7.886433601379395 C 6.732470989227295 8.65311336517334 7.177584171295166 9.382495880126953 7.872291564941406 10.25278377532959 C 9.120269775390625 11.7861442565918 10.43480968475342 12.97553443908691 11.88246154785156 13.8914098739624 C 12.06134033203125 14.00744533538818 12.25269889831543 14.09861946105957 12.43157482147217 14.18979072570801 C 12.59796905517578 14.27267456054688 12.7518892288208 14.35141849517822 12.88916873931885 14.43844413757324 C 12.90580463409424 14.44673347473145 12.91828632354736 14.45502090454102 12.93492603302002 14.46331024169922 C 13.0722017288208 14.53376388549805 13.205322265625 14.56691741943359 13.33844089508057 14.56691741943359 C 13.67123317718506 14.56691741943359 13.88755130767822 14.35556411743164 13.95826816558838 14.28511238098145 L 15.514084815979 12.73517322540283 C 15.75535583496094 12.49481010437012 16.01743507385254 12.3663387298584 16.27534484863281 12.3663387298584 C 16.59150314331055 12.3663387298584 16.84941864013672 12.56111621856689 17.01165390014648 12.73517322540283 L 19.52009010314941 15.2299919128418 C 20.01928329467773 15.72729682922363 20.01512336730957 16.26604461669922 19.50761032104492 16.7923641204834 C 19.33289337158203 16.97885131835938 19.14986038208008 17.15705490112305 18.95434188842773 17.34354400634766 C 18.66314888000488 17.6253490447998 18.35947608947754 17.91544723510742 18.08491897583008 18.24283981323242 C 17.60652351379395 18.75672340393066 17.03661346435547 18.9970874786377 16.30031204223633 18.9970874786377 C 16.22958946228027 18.9970874786377 16.15471267700195 18.99294281005859 16.08399200439453 18.98880004882812 C 14.71953868865967 18.90177154541016 13.450758934021 18.37131309509277 12.49813270568848 17.91959190368652 C 9.910658836364746 16.67218208312988 7.639337539672852 14.90260028839111 5.754890918731689 12.65643310546875 C 4.203236103057861 10.79568004608154 3.15909481048584 9.063394546508789 2.468546628952026 7.206786632537842 C 2.040073394775391 6.067121028900146 1.877835750579834 5.151249885559082 1.944394588470459 4.318262100219727 Z" fill="#ff7f00" stroke="#ff7f00" stroke-width="0.5" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
